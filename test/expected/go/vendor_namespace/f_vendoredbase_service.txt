// Autogenerated by Frugal Compiler (3.12.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package vendor_namespace

import (
	"bytes"
	"fmt"

	"github.com/samjxn/frugal/lib/go"
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/sirupsen/logrus"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal
var _ = logrus.DebugLevel

type FVendoredBase interface {
}

type FVendoredBaseClient struct {
	c       frugal.FClient
	methods map[string]*frugal.Method
}

func NewFVendoredBaseClient(provider *frugal.FServiceProvider, middleware ...frugal.ServiceMiddleware) *FVendoredBaseClient {
	methods := make(map[string]*frugal.Method)
	client := &FVendoredBaseClient{
		c:       frugal.NewFStandardClient(provider),
		methods: methods,
	}
	middleware = append(middleware, provider.GetMiddleware()...)
	return client
}

func (f *FVendoredBaseClient) Client_() frugal.FClient { return f.c }

type FVendoredBaseProcessor struct {
	*frugal.FBaseProcessor
}

func NewFVendoredBaseProcessor(handler FVendoredBase, middleware ...frugal.ServiceMiddleware) *FVendoredBaseProcessor {
	p := &FVendoredBaseProcessor{frugal.NewFBaseProcessor()}
	return p
}
